Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


Begin optimization report for: main(int, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ttd.cpp(25,3) inlined into ttd.cpp(70,3)
   remark #15388: vectorization support: reference a has aligned access   [ ttd.cpp(27,5) ]
   remark #15388: vectorization support: reference a has aligned access   [ ttd.cpp(28,5) ]
   remark #15388: vectorization support: reference a has aligned access   [ ttd.cpp(29,5) ]
   remark #15388: vectorization support: reference b has aligned access   [ ttd.cpp(31,5) ]
   remark #15388: vectorization support: reference b has aligned access   [ ttd.cpp(32,5) ]
   remark #15388: vectorization support: reference b has aligned access   [ ttd.cpp(33,5) ]
   remark #15388: vectorization support: reference c has aligned access   [ ttd.cpp(35,5) ]
   remark #15388: vectorization support: reference c has aligned access   [ ttd.cpp(36,5) ]
   remark #15388: vectorization support: reference c has aligned access   [ ttd.cpp(37,5) ]
   remark #15388: vectorization support: reference d has aligned access   [ ttd.cpp(39,5) ]
   remark #15388: vectorization support: reference d has aligned access   [ ttd.cpp(40,5) ]
   remark #15388: vectorization support: reference d has aligned access   [ ttd.cpp(41,5) ]
   remark #15388: vectorization support: reference e has aligned access   [ ttd.cpp(43,5) ]
   remark #15388: vectorization support: reference e has aligned access   [ ttd.cpp(44,5) ]
   remark #15388: vectorization support: reference e has aligned access   [ ttd.cpp(45,5) ]
   remark #15388: vectorization support: reference f has aligned access   [ ttd.cpp(47,5) ]
   remark #15388: vectorization support: reference f has aligned access   [ ttd.cpp(48,5) ]
   remark #15388: vectorization support: reference f has aligned access   [ ttd.cpp(49,5) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.013
   remark #15301: SIMD LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 18 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 1910 
   remark #15477: vector loop cost: 360.000 
   remark #15478: estimated potential speedup: 5.300 
   remark #15482: vectorized math library calls: 18 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: rndtriangles(unsigned int, double, double (*)[10000000], double (*)[10000000], double (*)[10000000], double (*)[10000000], double (*)[10000000], double (*)[10000000])

    Report from: Vector optimizations [vec]


LOOP BEGIN at ttd.cpp(25,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ttd.cpp(25,3)
   remark #15389: vectorization support: reference a has unaligned access   [ ttd.cpp(27,5) ]
   remark #15389: vectorization support: reference a has unaligned access   [ ttd.cpp(28,5) ]
   remark #15389: vectorization support: reference a has unaligned access   [ ttd.cpp(29,5) ]
   remark #15389: vectorization support: reference b has unaligned access   [ ttd.cpp(31,5) ]
   remark #15389: vectorization support: reference b has unaligned access   [ ttd.cpp(32,5) ]
   remark #15389: vectorization support: reference b has unaligned access   [ ttd.cpp(33,5) ]
   remark #15389: vectorization support: reference c has unaligned access   [ ttd.cpp(35,5) ]
   remark #15389: vectorization support: reference c has unaligned access   [ ttd.cpp(36,5) ]
   remark #15389: vectorization support: reference c has unaligned access   [ ttd.cpp(37,5) ]
   remark #15389: vectorization support: reference d has unaligned access   [ ttd.cpp(39,5) ]
   remark #15389: vectorization support: reference d has unaligned access   [ ttd.cpp(40,5) ]
   remark #15389: vectorization support: reference d has unaligned access   [ ttd.cpp(41,5) ]
   remark #15389: vectorization support: reference e has unaligned access   [ ttd.cpp(43,5) ]
   remark #15389: vectorization support: reference e has unaligned access   [ ttd.cpp(44,5) ]
   remark #15389: vectorization support: reference e has unaligned access   [ ttd.cpp(45,5) ]
   remark #15388: vectorization support: reference f has aligned access   [ ttd.cpp(47,5) ]
   remark #15388: vectorization support: reference f has aligned access   [ ttd.cpp(48,5) ]
   remark #15388: vectorization support: reference f has aligned access   [ ttd.cpp(49,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15412: vectorization support: streaming store was generated for f   [ ttd.cpp(47,5) ]
   remark #15412: vectorization support: streaming store was generated for f   [ ttd.cpp(48,5) ]
   remark #15412: vectorization support: streaming store was generated for f   [ ttd.cpp(49,5) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.068
   remark #15301: SIMD LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 3 
   remark #15451: unmasked unaligned unit stride stores: 15 
   remark #15467: unmasked aligned streaming stores: 3 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 1919 
   remark #15477: vector loop cost: 367.500 
   remark #15478: estimated potential speedup: 5.220 
   remark #15482: vectorized math library calls: 18 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ttd.cpp(25,3)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: penalty(double *, double *, double *, double *, double *, double *, double *, double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ttd.cpp(178,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ttd.cpp(256,9)
      remark #15388: vectorization support: reference x has aligned access
      remark #15388: vectorization support: reference x has aligned access
      remark #15388: vectorization support: reference dx has aligned access
      remark #15305: vectorization support: vector length 4
      remark #15427: loop was completely unrolled
      remark #15301: MATERIALIZED LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 2 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 6 
      remark #15477: vector loop cost: 1.250 
      remark #15478: estimated potential speedup: 4.800 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END
===========================================================================
